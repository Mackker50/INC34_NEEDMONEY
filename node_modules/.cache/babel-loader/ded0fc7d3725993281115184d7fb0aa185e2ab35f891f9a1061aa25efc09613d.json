{"ast":null,"code":"import * as XLSX from 'xlsx';\nexport const readExcelFile = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = event => {\n      var _event$target;\n      const data = new Uint8Array((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const firstSheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[firstSheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\n      resolve(jsonData);\n    };\n    reader.onerror = error => {\n      reject(error);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n};","map":{"version":3,"names":["XLSX","readExcelFile","file","Promise","resolve","reject","reader","FileReader","onload","event","_event$target","data","Uint8Array","target","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","onerror","error","readAsArrayBuffer"],"sources":["/Users/thitipongleelajelawat/INC34_MONEYMAG/student-payment-app/src/utils/excelReader.ts"],"sourcesContent":["import * as XLSX from 'xlsx';\n\nexport const readExcelFile = (file: File): Promise<any[]> => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            const data = new Uint8Array(event.target?.result as ArrayBuffer);\n            const workbook = XLSX.read(data, { type: 'array' });\n            const firstSheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[firstSheetName];\n            const jsonData = XLSX.utils.sheet_to_json(worksheet);\n            resolve(jsonData);\n        };\n        reader.onerror = (error) => {\n            reject(error);\n        };\n        reader.readAsArrayBuffer(file);\n    });\n};"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAE5B,OAAO,MAAMC,aAAa,GAAIC,IAAU,IAAqB;EACzD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;MAAA,IAAAC,aAAA;MACvB,MAAMC,IAAI,GAAG,IAAIC,UAAU,EAAAF,aAAA,GAACD,KAAK,CAACI,MAAM,cAAAH,aAAA,uBAAZA,aAAA,CAAcI,MAAqB,CAAC;MAChE,MAAMC,QAAQ,GAAGf,IAAI,CAACgB,IAAI,CAACL,IAAI,EAAE;QAAEM,IAAI,EAAE;MAAQ,CAAC,CAAC;MACnD,MAAMC,cAAc,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;MAC7C,MAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAM,CAACH,cAAc,CAAC;MACjD,MAAMI,QAAQ,GAAGtB,IAAI,CAACuB,KAAK,CAACC,aAAa,CAACJ,SAAS,CAAC;MACpDhB,OAAO,CAACkB,QAAQ,CAAC;IACrB,CAAC;IACDhB,MAAM,CAACmB,OAAO,GAAIC,KAAK,IAAK;MACxBrB,MAAM,CAACqB,KAAK,CAAC;IACjB,CAAC;IACDpB,MAAM,CAACqB,iBAAiB,CAACzB,IAAI,CAAC;EAClC,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}