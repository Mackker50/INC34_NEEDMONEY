{"ast":null,"code":"var _jsxFileName = \"/Users/thitipongleelajelawat/INC34_MONEYMAG/student-payment-app/src/components/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport readExcelFile from 'read-excel-file';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  // Helper function to fetch and read Excel file from public folder\n  const loadExcelFromPublic = async url => {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const blob = await response.blob();\n    const file = new File([blob], 'check.xlsx', {\n      type: blob.type\n    });\n    return readExcelFile(file);\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const studentsRaw = await loadExcelFromPublic('/check.xlsx');\n\n      // First row is header (e.g., ['Student ID'])\n      const headers = studentsRaw[0];\n\n      // Map rows (except header) to objects with keys from headers\n      const students = studentsRaw.slice(1).map(row => {\n        const obj = {};\n        headers.forEach((header, index) => {\n          obj[String(header)] = row[index];\n        });\n        return obj;\n      });\n\n      // Find user where both username and password match the same Student ID\n      const user = students.find(student => {\n        var _student$StudentID, _student$StudentID2;\n        return ((_student$StudentID = student['Student ID']) === null || _student$StudentID === void 0 ? void 0 : _student$StudentID.toString().trim()) === username.trim() && ((_student$StudentID2 = student['Student ID']) === null || _student$StudentID2 === void 0 ? void 0 : _student$StudentID2.toString().trim()) === password.trim();\n      });\n      if (user) {\n        history.push('/dashboard');\n        history.push('/dashboard', {\n          userName: username\n        });\n      } else {\n        setError('Invalid username or password');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Error reading the Excel file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"bg-white p-6 rounded shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"border rounded w-full py-2 px-3\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"border rounded w-full py-2 px-3\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white py-2 px-4 rounded\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"C4RFOjHuIyLsVoIOL4Dek9oUk4A=\", false, function () {\n  return [useHistory];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useHistory","readExcelFile","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","error","setError","history","loadExcelFromPublic","url","response","fetch","ok","Error","blob","file","File","type","handleLogin","e","preventDefault","studentsRaw","headers","students","slice","map","row","obj","forEach","header","index","String","user","find","student","_student$StudentID","_student$StudentID2","toString","trim","push","userName","err","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/thitipongleelajelawat/INC34_MONEYMAG/student-payment-app/src/components/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport readExcelFile from 'read-excel-file';\n\nconst LoginPage: React.FC = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  // Helper function to fetch and read Excel file from public folder\n  const loadExcelFromPublic = async (url: string) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const blob = await response.blob();\n    const file = new File([blob], 'check.xlsx', { type: blob.type });\n    return readExcelFile(file);\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const studentsRaw = await loadExcelFromPublic('/check.xlsx');\n\n      // First row is header (e.g., ['Student ID'])\n      const headers = studentsRaw[0];\n\n      // Map rows (except header) to objects with keys from headers\n      const students = studentsRaw.slice(1).map((row: any[]) => {\n        const obj: { [key: string]: any } = {};\n        headers.forEach((header, index) => {\n          obj[String(header)] = row[index];\n        });\n        return obj;\n      });\n\n      // Find user where both username and password match the same Student ID\n      const user = students.find(\n        (student) =>\n          student['Student ID']?.toString().trim() === username.trim() &&\n          student['Student ID']?.toString().trim() === password.trim()\n      );\n\n      if (user) {\n        history.push('/dashboard');\nhistory.push('/dashboard', { userName: username });\n      } else {\n        setError('Invalid username or password');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Error reading the Excel file');\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center h-screen bg-gray-100\">\n      <form onSubmit={handleLogin} className=\"bg-white p-6 rounded shadow-md\">\n        <h2 className=\"text-2xl mb-4\">Login</h2>\n        {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n        <div className=\"mb-4\">\n          <label className=\"block mb-2\" htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"border rounded w-full py-2 px-3\"\n            required\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2\" htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"border rounded w-full py-2 px-3\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"bg-blue-500 text-white py-2 px-4 rounded\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}