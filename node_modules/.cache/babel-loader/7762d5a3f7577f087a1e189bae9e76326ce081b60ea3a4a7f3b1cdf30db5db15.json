{"ast":null,"code":"import parseDate from '../read/parseDate.js';\nimport InvalidError from './InvalidError.js';\nexport default function DateType(value, _ref) {\n  var properties = _ref.properties;\n  // XLSX has no specific format for dates.\n  // Sometimes a date can be heuristically detected.\n  // https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\n  if (value instanceof Date) {\n    if (isNaN(value.valueOf())) {\n      throw new InvalidError('out_of_bounds');\n    }\n    return value;\n  }\n  if (typeof value === 'number') {\n    if (isNaN(value)) {\n      throw new InvalidError('invalid_number');\n    }\n    if (!isFinite(value)) {\n      throw new InvalidError('out_of_bounds');\n    }\n    var date = parseDate(value, properties);\n    if (isNaN(date.valueOf())) {\n      throw new InvalidError('out_of_bounds');\n    }\n    return date;\n  }\n  throw new InvalidError('not_a_date');\n}","map":{"version":3,"names":["parseDate","InvalidError","DateType","value","_ref","properties","Date","isNaN","valueOf","isFinite","date"],"sources":["/Users/thitipongleelajelawat/INC34_MONEYMAG/student-payment-app/node_modules/read-excel-file/source/types/Date.js"],"sourcesContent":["import parseDate from '../read/parseDate.js'\r\nimport InvalidError from './InvalidError.js'\r\n\r\nexport default function DateType(value, { properties }) {\r\n\t// XLSX has no specific format for dates.\r\n  // Sometimes a date can be heuristically detected.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\r\n  if (value instanceof Date) {\r\n    if (isNaN(value.valueOf())) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return value\r\n  }\r\n  if (typeof value === 'number') {\r\n    if (isNaN(value)) {\r\n      throw new InvalidError('invalid_number')\r\n    }\r\n    if (!isFinite(value)) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    const date = parseDate(value, properties)\r\n    if (isNaN(date.valueOf())) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return date\r\n  }\r\n  throw new InvalidError('not_a_date')\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAAC,IAAA,EAAkB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACnD;EACC;EACA;EACA,IAAIF,KAAK,YAAYG,IAAI,EAAE;IACzB,IAAIC,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,EAAE;MAC1B,MAAM,IAAIP,YAAY,CAAC,eAAe,CAAC;IACzC;IACA,OAAOE,KAAK;EACd;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAII,KAAK,CAACJ,KAAK,CAAC,EAAE;MAChB,MAAM,IAAIF,YAAY,CAAC,gBAAgB,CAAC;IAC1C;IACA,IAAI,CAACQ,QAAQ,CAACN,KAAK,CAAC,EAAE;MACpB,MAAM,IAAIF,YAAY,CAAC,eAAe,CAAC;IACzC;IACA,IAAMS,IAAI,GAAGV,SAAS,CAACG,KAAK,EAAEE,UAAU,CAAC;IACzC,IAAIE,KAAK,CAACG,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE;MACzB,MAAM,IAAIP,YAAY,CAAC,eAAe,CAAC;IACzC;IACA,OAAOS,IAAI;EACb;EACA,MAAM,IAAIT,YAAY,CAAC,YAAY,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}