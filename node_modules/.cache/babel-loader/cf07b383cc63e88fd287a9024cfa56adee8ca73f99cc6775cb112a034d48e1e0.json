{"ast":null,"code":"var _jsxFileName = \"/Users/thitipongleelajelawat/INC34_MONEYMAG/student-payment-app/src/contexts/AppContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AppContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext(undefined);\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [totalBalance, setTotalBalance] = useState(0);\n  const [topUpHistory, setTopUpHistory] = useState([]);\n  const [userName, setUserName] = useState('');\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      totalBalance,\n      topUpHistory,\n      userName,\n      setUserName\n      // ...other context values and setters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"XdSGQWcKjDZxaW8XDPuQpycmeY8=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within AppProvider');\n  }\n  return context;\n};\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AppContext","undefined","AppProvider","children","_s","totalBalance","setTotalBalance","topUpHistory","setTopUpHistory","userName","setUserName","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/thitipongleelajelawat/INC34_MONEYMAG/student-payment-app/src/contexts/AppContext.tsx"],"sourcesContent":["// src/contexts/AppContext.tsx\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { TopUp } from '../types';\n\ninterface AppContextType {\n  totalBalance: number;\n  topUpHistory: TopUp[];\n  userName: string;\n  setUserName: (name: string) => void;\n  // Add other state/setters you already have...\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider = ({ children }: { children: ReactNode }) => {\n  const [totalBalance, setTotalBalance] = useState<number>(0);\n  const [topUpHistory, setTopUpHistory] = useState<TopUp[]>([]);\n  const [userName, setUserName] = useState<string>('');\n\n  return (\n    <AppContext.Provider\n      value={{\n        totalBalance,\n        topUpHistory,\n        userName,\n        setUserName,\n        // ...other context values and setters\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within AppProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW9E,MAAMC,UAAU,gBAAGL,aAAa,CAA6BM,SAAS,CAAC;AAEvE,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EAC3D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAU,EAAE,CAAC;EAC7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAEpD,oBACEE,OAAA,CAACC,UAAU,CAACW,QAAQ;IAClBC,KAAK,EAAE;MACLP,YAAY;MACZE,YAAY;MACZE,QAAQ;MACRC;MACA;IACF,CAAE;IAAAP,QAAA,EAEDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACZ,EAAA,CAlBWF,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAoBxB,OAAO,MAAMgB,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAMC,OAAO,GAAGxB,UAAU,CAACI,UAAU,CAAC;EACtC,IAAI,CAACoB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,aAAa;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}